#! /bin/sh

# Spot o' Conf

# Copyright (c) 2017,2018,2019 Stuart Cassoff <stwo@users.sourceforge.net>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

SPOTO_VER=0.9

SH=/bin/sh
e='printf %s\n'
de='printf .%s\n'; de=:
ECHO=${e}
TR=tr
SED=sed

read SUBST_VARS <<EndSubstVars
FOR_WHAT TITLE NAME VERSION NAMESPACE PKG_NAME DIST_NAME DESCR CATEGORIES HOMEPAGE LICENSE \
LIB DOC EXA DAT_DIR DAT_FILES SHLIB SCLIB SCLIBSRC DOCSRC DOCBLD DOCFMT \
SCBIN SCBINSRC PKGINDEX CFG_PKGINDEX LOAD_LIB INIT \
LIBDIR INSTALL_LIB INSTALL_DOC INSTALL_EXA INSTALL_DAT INSTALL_BIN INSTALL_EXTRA PKG_INSTALL_DIR DOC_INSTALL_DIR \
CC CFLAGS_CC CFLAGS_WARN CFLAGS_OPT CFLAGS_DEBUG CFLAGS_SH CFLAGS_TH \
DEFS_TH DEFS_OPT DEFS_SPOT DEFS_TCL DEFS_JIM DEFS \
LDFLAGS LDFLAGS_SH LIBS_TH \
EXT_CONF_FILES EXT_BUILD EXT_DEFS EXT_INC_SPEC EXT_LIB_SPEC EXT_DEP_FILES \
TCL_INC_SPEC TCL_LIB_SPEC TCL_STUB_LIB_SPEC JIM_INC_SPEC JIM_LIB_SPEC CC_INC_SPEC LD_LIB_SPEC \
LD_LIBRARY_PATH_VAR TCLLIBPATH TCL8_5_TM_PATH TCL8_6_TM_PATH JIMLIB \
TCLSH_PROG JIMSH_PROG BJE SH \
SHELL CLEAN DISTCLEAN DIST TEST TESTENV TESTFWK VPATH \
BUILD_SCLIB BUILD_SCBIN BUILD_DOC PKGS PKGS_DIR \
cwd asrcdir srcdir appdir prefix pkgdir moddir mandir docdir exadir datdir bindir SPOTO_ARGS
EndSubstVars

read OP_SUBST_VARS <<EndOpSubstVars
OP_MAINTAINER OP_LICENSE_OK OP_WANTLIB OP_MODULES OP_MODTCL_VERSION \
OP_BUILD_DEPENDS OP_RUN_DEPENDS OP_CONFIGURE_ARGS
EndOpSubstVars

get_moddir() {
  eval tclsh_prog="\"$TCLSH_PROG\""
  moddirs=`${e} 'puts [::tcl::tm::path list]' | $tclsh_prog`
  newmoddir=''
  tcl_dots_re=`${e} $tcl | ${SED} -e 's/\./[.]/g'`
  for i in $moddirs ; do
    if expr $i : '..*'$tcl_nodots'$'  > /dev/null; then newmoddir=$i; break; fi
    if expr $i : '..*'$tcl_dots_re'$' > /dev/null; then newmoddir=$i; break; fi
  done
}

get_bits() {
  libdirs=''
  namespace=''
  name=''
  ver=''
  ext=''
  arg=$1
  title=`expr "$arg" : '^\(..*\)-..*$'`
  ver=`expr "$arg" : "^$title"'-\(..*\)\...*$'`
  ext=`expr "$arg" : "^${title}-${ver}"'\.\(..*\)$'`
  if expr "$ext" : '[0-9][0-9]*' > /dev/null; then
    ver=$ver.$ext
    ext=''
  fi
  if test X"$title" = X"" || test X"$ver" = X""; then return 1; fi
  name=`expr "$title" : '^..*::\(..*\)$'` || name=$title
  name=`tolower $name`
  namespace=`tolower "$title"`
  nsp=`expr "$namespace" : '^\(..*\)::..*$'`
  q='';oifs=$IFS;IFS=':';for j in $nsp;do for i in $j;do q="$q $i";done;done;IFS=$oifs;q=`expr "$q" : '^ \(..*\)$'`
  for i in $q; do
    libdirs="${libdirs}${i}/"
  done
  namespace="::$namespace"
}

showres() {
  SVARS="$SUBST_VARS"
  if test -f Makefile.portobsd; then SVARS="$SVARS $OP_SUBST_VARS"; fi
  for i in $SVARS; do
    printf '%-20s {@%s@}\n' $i $i
  done | ${SED} -f spoto.sed
}

tolower() { printf %s "`${e} "$1" | ${TR} '[:upper:]' '[:lower:]'`"; }

if test X"$1" = X"--result"; then showres; exit; fi

#NAME=spot
#VERSION=0.0
#NAMESPACE=::good::dog
#PKG_NAME=spot
#TITLE='Tcl or Jim extension'
#DESCR='A really good program!'

NAME=''
VERSION=''
NAMESPACE=''
PKG_NAME=''
DIST_NAME=''
TITLE=''

DESCR=''
CATEGORIES=''
HOMEPAGE=''
LICENSE=''

LIB=''
INIT=''
SCLIBSRC=''

PKGS=''
PKGS_DIR=''

#FOR_WHAT=Tcl
#FOR_WHAT=Jim

if test X"${TCL}" = X""; then
  TCL=8.6
fi
tcl="${TCL}"
tcl_nodots=`${e} "$tcl" | ${TR} -d '.'`

srcdir=`expr $0 : '\(.*\)/.*$'`
: ${srcdir:=.}
cwd=`pwd`
cd $srcdir
asrcdir=`pwd`
cd $cwd

prefix=/usr/local
appdir=''
#bindir='${prefix}/bin'
bindir=''
libdir='${prefix}/lib'
mandir='${prefix}/man/mann'
#docdir='${prefix}/share/doc'
docdir=''
#exadir='${prefix}/share/examples'
exadir=''
datdir=''

pkgdir=''
moddir=''
moddir_set=no
moddir_setinconf=no

TCLSH_PROG='tclsh${tcl}'
WISH_PROG='wish${tcl}'
JIMSH_PROG=jimsh
BJE='/usr/local/share/examples/jim/build-jim-ext'

JIM_INC_DIR='${prefix}/include/jim'
JIM_LIB_DIR='${prefix}/lib'
JIM_LIB=jim

TCL_CONF_DIR='${prefix}/lib/tcl/tcl${tcl}'
PKGCONFIG=no

TCLLIBPATH='.'
TCL8_5_TM_PATH='.'
TCL8_6_TM_PATH='.'
JIMLIB='.'

DEBUG=no
THREADS=''
PKGINDEX=''
DOC=''
DOCBLD=dtplite
EXA=''
DAT=''
DAT_DIR=''
DAT_FILES=''
BIN=''
BINSRC=''
TESTENV=''

TEST='test-spot'
SHELL='shell-spot'
CLEAN='clean-spot'
DISTCLEAN='distclean-spot'
DIST='dist-ext'
PKGS_CFGNOW='yes'

EXT_BUILD=''
EXT_DEFS=''
EXT_INC_SPEC=''
EXT_LIB_SPEC=''
EXT_DEP_FILES=''
EXT_VPATH=''
EXT_CONF=''
EXT_MK=''

INSTALL_EXA=''
INSTALL_DAT=''
INSTALL_EXTRA=''

DO=''
BUILD_SCLIB=''
BUILD_SCBIN=''
BUILD_DOC=''

OP_MAINTAINER=''
OP_CATEGORIES=''
OP_WANTLIB=''
OP_MODULES=''
OP_MODTCL_VERSION=''
OP_BUILD_DEPENDS=''
OP_RUN_DEPENDS=''

BLDSRC_FATAL=yes

VPATH='${srcdir}/generic:${srcdir}/unix:${srcdir}/library:${srcdir}/doc:${srcdir}/bin'

if test X"$1" != X"" && ! expr X"$1" : X'--..*$' > /dev/null; then
  spoto_conf_file=$1
  shift
else
  spoto_conf_file=$srcdir/spoto.conf
fi

SPOTO_ARGS="$@"

. "$spoto_conf_file"

EXT_CONF_FILES=''
ext_conf_files=''
set -- $EXT_CONF
while test $# -ne 0; do
  EXT_CONF_FILES="$EXT_CONF_FILES $1"
  ext_conf_file=$srcdir/$1
  shift
  ext_conf_files="$ext_conf_files $ext_conf_file"
  EXT_CONF=''
  . "$ext_conf_file"
  if test X"$EXT_CONF" != X""; then
    ext_conf="$EXT_CONF $*"
    set -- $ext_conf
  fi
done
EXT_CONF_FILES=`expr "$EXT_CONF_FILES" : '^ \(..*\)$'`

LIBDIR=''
if get_bits "$LIB"; then
  LIBDIR=$libdirs
  LIB=''
else
  if get_bits "$BIN"; then
    BIN=${name}.${ext}
echo $BIN
    ext=''
  else
    if get_bits "$DAT"; then
      INSTALL_DAT='install-dat'
      ext=''
    else
      if ! get_bits "$TITLE"; then
        title=$TITLE
        name=$NAME
      fi
    fi
  fi
fi

if test X"$name" = X""; then
  name=`tolower "$title"`
fi
if test X"$title" = X""; then
  title=$name
fi

if test X"$name" = X""; then
  ${e} "Must arrive at a NAME by some method!"
  exit 1
fi

if test X"$NAME" = X""; then
  NAME=$name
fi

if test X"$VERSION" = X""; then
  VERSION=$ver
fi

if test X"$NAMESPACE" = X""; then
  NAMESPACE=$namespace
fi

if test X"$PKG_NAME" = X""; then
  PKG_NAME=$NAME
fi

if test X"$DIST_NAME" = X""; then
  DIST_NAME='${NAME}-${VERSION}'
fi

if test X"$LIB" = X"" && test X"$ext" != X""; then
  if test X"$ext" = X"so"; then
    LIB=lib
  fi
  LIB="$LIB${NAME}.${ext}"
fi

if test X"$TITLE" = X""; then
  TITLE=$title
fi

if test X"$EXT_VPATH" != X""; then
  VPATH="$VPATH:$EXT_VPATH"
fi

if test X"${tcl}" != X"${TCL}"; then
  tcl="${TCL}"
fi

if test X"$FOR_WHAT" != X"Jim"; then
  FOR_WHAT=Tcl
fi

if test X"$THREADS" = X""; then
  if test $FOR_WHAT = Jim; then
    THREADS=no
  else
    THREADS=yes
  fi
fi

SHLIB=''
SCLIB=''
sclibsrc=''
LOAD_LIB=''
INSTALL_LIB=''
if expr "$LIB" : '..*[.]tcl$' > /dev/null; then
  SCLIB="$LIB"
  sclibsrc="$LIB"
  LOAD_LIB='source'
  INSTALL_LIB='install-script-lib'
fi
if test X"$LOAD_LIB" = X""; then
  if expr "$LIB" : '..*[.]tm$' > /dev/null; then
    LIBNAME=`expr "$LIB" : '\(..*\)[.]tm'`
    if test $FOR_WHAT = Jim; then
      SCLIB=$LIBNAME.tcl
      LOAD_LIB='source'
    else
      SCLIB=$LIBNAME-$VERSION.tm
      LOAD_LIB='tm'
    fi
    sclibsrc=$LIBNAME.tcl
    INSTALL_LIB='install-script-lib'
    LIB="$SCLIB"
  fi
fi
if test X"$SCLIBSRC" = X""; then
  SCLIBSRC=$sclibsrc
fi
if test X"$LOAD_LIB" = X"" && test X"$LIB" != X""; then
  SHLIB="$LIB"
  SCLIB=''
  LOAD_LIB='load'
  INSTALL_LIB='install-bin-lib'
fi

DOCFMT=''
if test X"$DOC" != X""; then
  docext=`expr $DOC : '..*\.\(..*\)$'`
  if expr "$docext" : '^[1-9n]$' >/dev/null; then
    DOCFMT=nroff
  fi
  if test X"$docext" = X"html"; then
    DOCFMT=html
  fi
fi

SCBIN=''
SCBINSRC=''
INSTALL_BIN=''
if test X"$BINSRC" = X""; then
  BINSRC="$BIN"
fi
if expr X"$BINSRC" : X'..*[.]tcl$' > /dev/null; then
  SCBIN="$BIN"
  SCBINSRC="$BINSRC"
  INSTALL_BIN='install-script-bin'
fi

if test X"$PKGS_DIR" = X""; then
  PKGS_DIR=pkgs
fi

if test X"$appdir" = X""; then
  appdir=`tolower "$NAME"`
fi

if test X"$pkgdir" = X""; then
  if test $FOR_WHAT = Jim; then
    pkgdir='${prefix}/lib/jim'
  else
    pkgdir='${prefix}/lib/tcl/${appdir}'
  fi
fi

if test X"$FOR_WHAT" != X"Jim"; then
  if test X"$LOAD_LIB" = X"tm"; then
    if test X"$moddir" = X""; then
      moddir='${prefix}/lib/tcl/modules/$tcl_nodots'
    else
      moddir_setinconf=yes
    fi
  fi
fi
if test X"$moddir" = X"guess"; then
  get_moddir
  moddir=$newmoddir
  moddir_guess='guess: '
else
  moddir_guess=''
fi

if test X"$docdir" = X""; then
  docdir='${prefix}/share/doc/${appdir}'
fi

if test X"$exadir" = X""; then
  exadir='${prefix}/share/examples/${appdir}'
fi

if test X"$datdir" = X""; then
  datdir='${prefix}/share/${appdir}'
fi

if test X"$bindir" = X""; then
  bindir='${prefix}/bin'
fi

if test $FOR_WHAT = Jim; then
  t=:
  j=${e}
else
  t=${e}
  j=:
fi

if test -f ${srcdir}/Makefile.portobsd.in ; then o=${e} ; else o=: ; fi
if test X"$PKGS" = X"" ; then p=: ; else p=${e} ; fi

showhelpinfo=''
showhelp=''
showres=''
showinfo=''
showpkgs=''
showpkgsinfo=''
portdir='no'
huh=''

for arg in $SPOTO_ARGS
do
  name=`expr "$arg" : '\(.*\)=.*$'`
  if test X"$name" != X""; then
    value=`expr "$arg" : "$name=\(.*\)$"`
  else
    name=$arg
    value=''
  fi
  case $name in
    --appdir	) appdir=$value		;;
    --prefix	) prefix=$value		;;
    --bindir	) bindir=$value		;;
    --libdir	) libdir=$value		;;
    --pkgdir	) pkgdir=$value		;;
    --moddir	) moddir=$value; moddir_set=yes ;;
    --mandir	) mandir=$value		;;
    --docdir	) docdir=$value		;;
    --exadir	) exadir=$value		;;
    --datdir	) datdir=$value		;;
    --tcl	) tcl=$value		;;
    --pkgconfig	) PKGCONFIG=$value	;;
    --with-tcl	) TCL_CONF_DIR=$value	;;
    --jimincdir	) JIM_INC_DIR=$value	;;
    --jimlibdir	) JIM_LIB_DIR=$value	;;
    --jimlib	) JIM_LIB_DIR=$value	;;
    --tclsh	) TCLSH_PROG=$value	;;
    --wish	) WISH_PROG=$value	;;
    --jimsh	) JIMSH_PROG=$value	;;
    --bje	) BJE=$value		;;
    --docbld    ) DOCBLD=$value		;;
    --docfmt    ) DOCFMT=$value		;;
    --debug	) DEBUG=$value		;;
    --info	) showinfo=yes		;;
    --pkgs	) showpkgs=yes		;;
    --pkgs-info	) showpkgsinfo=yes	;;
    --pkgs-cfgnow ) PKGS_CFGNOW=$value	;;
    --port-obsd	) portdir=$value	;;
    --result	) showres=yes		;;
    --quiet	) ECHO=:		;;
    -\?|--help	) showhelp=yes		;;
    *		) huh="$huh $arg";showres='';break ;;
  esac
done

if test X"$moddir_set" = X"yes"; then
  moddir_guess=''
fi

if test X"$showres" = X"yes"; then showres; exit; fi

if test X"$portdir" != X"no" && test X"$portdir" != X""; then
  if ! expr X"$portdir" : ^X'/..*' > /dev/null; then
    ${e} 'port dir must be an absolute path'
    exit 1
  fi
  if ! expr "$portdir" : '^..*/$' > /dev/null; then
    portdir="$portdir/"
  fi
fi

pkg_info="$TITLE $VERSION for $FOR_WHAT"
pkg_blurb=$pkg_info
if test X"$DESCR" != X""; then
  pkg_blurb="$pkg_blurb. ($DESCR)"
fi

if test X"$showpkgs"    = X"yes"; then ${e} "$PKGS";     fi
if test X"$showinfo"    = X"yes"; then
  printf 'package    : %s\ncategories : %s\nhomepage   : %s\nlicense    : %s\n' \
    "$pkg_blurb" "$CATEGORIES" "$HOMEPAGE" "$LICENSE"
fi

if test X"$showpkgsinfo" = X"yes"; then
  for i in $PKGS; do (cd $srcdir/$PKGS_DIR/$i && ./configure --info); ${e} ''; done
fi

if test X"${showinfo}${showpkgs}${showpkgsinfo}" != X"" ; then
  exit
fi

${ECHO} "Spot o' Conf $SPOTO_VER configurator for: $pkg_blurb"

if test X"$huh" != X""; then
  ${ECHO} "Huh? $huh"
  exit 1
fi

if test X"$showhelpinfo" = X"yes"; then
  ${e} "Use `expr $0 : '.*/\(.*\)$'` --help for help"
  exit
fi

if test X"$showhelp" = X"yes"; then
  ${e} "Usage: `expr $0 : '.*/\(.*\)$'` [option=value ...]"
  ${e} 'Options:'
  ${t} "  --tcl          ver    Tcl version to use [${tcl}]"
  ${e} "  --appdir       dir    Usually the name of the thing [${appdir}]"
  ${e} "  --prefix       dir    Prefix [${prefix}]"
  ${e} "  --bindir       dir    Executable files dir [${bindir}]"
  ${e} "  --libdir       dir    Library files dir [${libdir}]"
  ${e} "  --pkgdir       dir    Package files dir [${pkgdir}]"
  ${t} "  --moddir       dir    Module files dir [${moddir_guess}${moddir}]"
  ${e} "  --mandir       dir    Man files dir [${mandir}]"
  ${e} "  --docdir       dir    Documentation files dir [${docdir}]"
  ${e} "  --exadir       dir    Example files dir [${exadir}]"
  ${e} "  --datdir       dir    Data files dir [${datdir}]"
  ${e} "  --pkgconfig    key    Key for pkg-config [${PKGCONFIG}]"
  ${t} "  --with-tcl     dir    Where to find tclConfig.sh [${TCL_CONF_DIR}]"
  ${j} "  --jimincdir    dir    Where to find Jim include files [${JIM_INC_DIR}]"
  ${j} "  --jimlibdir    dir    Where to find Jim lib files [${JIM_LIB_DIR}]"
  ${j} "  --jimlib       dir    Name of Jim lib file [${JIM_LIB}]"
  ${t} "  --tclsh        file   Path to tclsh [${TCLSH_PROG}]"
  ${t} "  --wish         file   Path to wish [${WISH_PROG}]"
  ${j} "  --jimsh        file   Path to jimsh [${JIMSH_PROG}]"
  ${j} "  --bje          file   Path to build-jim-ext [${BJE}]"
  ${e} "  --docbld       file   Documentation builder [${DOCBLD}]"
  ${e} "  --docfmt       fmt    Documentation format [${DOCFMT}]"
  ${e} "  --debug        bool   Enable symbols and checks [${DEBUG}]"
  ${e} '  --info                Print package info'
  ${p} '  --pkgs                Print package names on one line'
  ${p} '  --pkgs-info           Print packages info'
  ${p} "  --pkgs-cfgnow  bool   Configure packages now [${PKGS_CFGNOW}]"
  ${o} "  --port-obsd    dir    Create an OpenBSD port in dir [${portdir}]"
  ${e} '  --result              Print the result of a configuration'
  ${e} '  --quiet               Do not display configure messages'
  ${e} '  --help, -?            This information'
  exit
fi

if test -f spoto.conf; then
  ${e} "Don't build in the toplevel source directory!"
  if test X"$BLDSRC_FATAL" != X"no"; then exit 1; fi
fi

if test -f ../spoto.conf; then
  for p in $PKGS; do
    if ! test -f $p/spoto.conf; then continue; fi
    ${e} "Don't build in the pkgs toplevel source directory!"
    if test X"$BLDSRC_FATAL" != X"no"; then exit 1; fi
    break
  done
fi

${ECHO} "Using config: $spoto_conf_file$ext_conf_files"

if test X"$portdir" = X"no"; then portdir=''; fi

if test X"$DEBUG" = X"yes"; then
  CFLAGS_DEBUG='-g'
else
  CFLAGS_DEBUG='-DNDEBUG=1'
fi

LIBS_TH=''
if test X"$THREADS" = X"yes"; then
  CFLAGS_TH='-pthread'
  DEFS_TH='-DTCL_THREADS=1 -DUSE_THREAD_ALLOC=1'
else
  CFLAGS_TH=''
  DEFS_TH=''
fi

if test X"$DOCFMT" != X"nroff" && test X"$DOCFMT" != X"html"; then
  DOCFMT=''
fi

DOCSRC=''
if test X"$DOCFMT" != X"" && test X"$DOC" != X""; then
  docname=`expr $DOC : '\(..*\)\..*$'`
  DOCSRC=$docname.man
  VPATH="$VPATH"':${srcdir}/doc'
  if test X"$DOCFMT" = X"nroff"; then
    DOC_INSTALL_DIR='${mandir}'
    if expr "$docext" : '^[1-9n]$' >/dev/null; then
      DOC=$docname.$docext
    else
      DOC=$docname.n
    fi
  fi
  if test X"$DOCFMT" = X"html"; then
    DOC_INSTALL_DIR='${docdir}'
    DOC=$docname.html
  fi
  INSTALL_DOC=install-doc
else
  DOC=''
  DOCBLD=''
  DOC_INSTALL_DIR='${docdir}'
  INSTALL_DOC=''
fi

TCLCONFIG=''
if test X"$PKGCONFIG" != X"no"; then
  TCL_CONF_DIR=no
fi
if test X"$TCL_CONF_DIR" != X"no"; then
  eval TCLCONFIG="\"$TCL_CONF_DIR\""/tclConfig.sh
fi

eval TCLSH_PROG="\"$TCLSH_PROG\""

tcl_nodots=`${e} "$tcl" | ${TR} -d '.'`

if test X"$LOAD_LIB" = X"tm"; then
  if test X"$moddir_set" != X"yes"; then
    if test X"$moddir_setinconf" != X"yes"; then
      moddir='${prefix}/lib/tcl/modules/'$tcl_nodots
    fi
  fi
fi
if test X"$moddir" = X"guess"; then
  get_moddir
  moddir=$newmoddir
fi

if test $FOR_WHAT = Jim; then
  PKGINDEX=''
  DEFS='${DEFS_JIM}'
  DEFS_SPOT='-DFOR_JIM=1'
  CC_INC_SPEC='${JIM_INC_SPEC}'
  LD_LIB_SPEC='${JIM_LIB_SPEC}'
  PKG_INSTALL_DIR='${pkgdir}'
  TESTFWK='testing.tcl'
else
  DEFS='${DEFS_TCL}'
  DEFS_SPOT='-DFOR_TCL=1'
  CC_INC_SPEC='${TCL_INC_SPEC}'
  #LD_LIB_SPEC='${TCL_LIB_SPEC}'
  LD_LIB_SPEC='${TCL_STUB_LIB_SPEC}'
  if test X"$LOAD_LIB" = X"tm"; then
    PKG_INSTALL_DIR='${moddir}'
  else
    PKG_INSTALL_DIR='${pkgdir}'
  fi
  TESTFWK='all.tcl'
fi

if test X"$LIBDIR" != X""; then
  PKG_INSTALL_DIR="$PKG_INSTALL_DIR/$LIBDIR"
fi

if false;then
if test X"$LOAD_LIB" = X"tm"; then
  LOAD_LIB=source
fi
fi

if test X"$BUILD_SCLIB" = X""; then
  BUILD_SCLIB='ln -s ${cwd}/$> $^ $@'
fi
if test X"$BUILD_SCBIN" = X""; then
  BUILD_SCBIN='ln -s ${cwd}/$> $^ $@'
fi
if test X"$BUILD_DOC" = X""; then
  BUILD_DOC='ln -s ${srcdir}/doc/${DOC} ${DOC}'
fi

DEFS_OPT='-DPACKAGE_NAME=\\"'"$PKG_NAME"'\\" -DPACKAGE_VERSION=\\"'"$VERSION"'\\"'

CC=${CC:=cc}
CFLAGS_CC='-pipe'
CFLAGS_WARN=${CFLAGS_WARN:='-Wall -Wextra'}
CFLAGS_OPT='-O2'
CFLAGS_SH='-fpic'
LDFLAGS=''
LDFLAGS_SH='-shared'
DEFS_TCL='-DUSE_TCL_STUBS=1'
DEFS_JIM=''

LD_LIBRARY_PATH_VAR=LD_LIBRARY_PATH

TCL_INC_SPEC=''
TCL_LIB_SPEC=''
TCL_STUB_LIB_SPEC=''

eval JIM_INC_SPEC="-I\"$JIM_INC_DIR\""
eval JIM_LIB_SPEC="-L\"$JIM_LIB_DIR\"' '-l\"$JIM_LIB\""

if test $FOR_WHAT = Tcl; then
  if test X"$TCLCONFIG" != X""; then
    ${ECHO} "Using tclConfig.sh: $TCLCONFIG"
    . "$TCLCONFIG"
  else
    if test X"$PKGCONFIG" != X"no"; then
      if test X"$PKGCONFIG" = X"yes"; then
          PKGCONFIG=tcl$tcl_nodots
      fi
       ${ECHO} "Using pkg-config: $PKGCONFIG"
      TCL_INCLUDE_SPEC=`pkg-config --cflags $PKGCONFIG` || exit 1
      TCL_LIB_SPEC=`pkg-config     --libs   $PKGCONFIG` || exit 1
    fi
  fi
  TCL_INC_SPEC=${TCL_INCLUDE_SPEC-}
else
    if test X"$PKGCONFIG" != X"no"; then
      if test X"$PKGCONFIG" = X"yes"; then
          PKGCONFIG=jimtcl
      fi
      JIM_INC_SPEC=`pkg-config --cflags $PKGCONFIG` || exit 1
      JIM_LIB_SPEC=`pkg-config --libs   $PKGCONFIG` || exit 1
    fi
fi

if test X"$DESCR" = X""; then
  DESCR='sorftware'
fi
if test X"$CATEGORIES" = X""; then
  CATEGORIES='misc'
fi


sfiles='Makefile.in'
if test X"$PKGINDEX" = X"pkgIndex.tcl.in"; then
  sfiles="$sfiles $PKGINDEX"
  CFG_PKGINDEX=cfg_`expr $PKGINDEX : '\(..*\)\.in$'`
  PKGINDEX=''
else
  CFG_PKGINDEX=''
fi

if test X"$PKGS" != X""; then
  EXT_MK="Makefile.pkgs.in $EXT_MK"
  CLEAN="pkgs-clean $CLEAN"
  DISTCLEAN="pkgs-distclean $DISTCLEAN"
  TEST="pkgs-test $TEST"
  SHELL=pkgs-shell
  DIST="$DIST pkgs-dist"
  INSTALL_EXTRA="$INSTALL_EXTRA pkgs-install"
  EXT_BUILD=pkgs
fi

if test X"$portdir" != X""; then
  if test X"$LICENSE" = X""; then
    LICENSE='???'
  fi
  SUBST_VARS="$SUBST_VARS $OP_SUBST_VARS"
  case $LICENSE in
    ISC* ) OP_LICENSE_OK=Yes   ;;
    BSD* ) OP_LICENSE_OK=Yes   ;;
    MIT* ) OP_LICENSE_OK=Yes   ;;
     PD* ) OP_LICENSE_OK=Yes   ;;
    GPL* ) OP_LICENSE_OK=Maybe ;;
       * ) OP_LICENSE_OK=No    ;;
  esac
  if test X"$FOR_WHAT" = X"Jim"; then
    OP_WANTLIB=jim
    OP_BUILD_DEPENDS=lang/jimtcl
    OP_RUN_DEPENDS=lang/jimtcl
  else
    OP_MODULES=lang/tcl
    OP_MODTCL_VERSION="${TCL}"
    OP_BUILD_DEPENDS='${MODTCL_BUILD_DEPENDS}'
    OP_RUN_DEPENDS='${MODTCL_RUN_DEPENDS}'
    OP_CONFIGURE_ARGS="--tcl=${TCL}"
  fi
  if test X"$OP_MAINTAINER" = X""; then
    OP_MAINTAINER=`whoami`@`hostname`
  fi
  EXT_MK=''
  sfiles=Makefile.portobsd.in
  for i in $CATEGORIES; do category=$i; break; done
  portdir=${portdir}${category}/${PKG_NAME}/
  ${ECHO} "Creating OpenBSD port in $portdir"
  mkdir -p $portdir
fi

if test X"${ECHO}" = X":"; then ECHOSN=:; else ECHOSN='printf %s\040'; fi

${ECHOSN} "Generating: ${portdir}spoto.sed"

rm -f ${portdir}spoto.sed

if test X"$EXT_MK" != X"" ; then
  for i in $EXT_MK; do
    printf '%s\n\n%s\n' '/@EXT_MK@/a \' "/@EXT_MK@/r $srcdir/$i"
  done
  if test X"$i" = X"Makefile.pkgs.in"; then
    printf '%s\n' 's,@EXT_MK@,@TITLE@ Packages,'
  else
    printf '%s\n' 's,@EXT_MK@,@TITLE@,'
  fi
else
  printf '%s\n' '/@EXT_MK@/,/$/d'
fi >> ${portdir}spoto.sed

for i in $SUBST_VARS; do
  eval q=`printf '$%s' "$i"`
  printf 's\001@%s@\001%s\001g\n' $i "$q"
done >> ${portdir}spoto.sed

do_out() {
  for ifile in $sfiles; do
    ofile=`expr $ifile : '\(..*\)\.in$'`
    INFILE=$srcdir/$ifile
    OUTFILE=${portdir}${ofile}
    ${ECHOSN} "$OUTFILE"
   ${SED} -f ${portdir}spoto.sed < "$INFILE" > "$OUTFILE"
  done
}

if test X"$portdir" != X""; then
  if test X"$FOR_WHAT" = X"Jim"; then
    printf '%s\n' '/MODULES/d'
    printf '%s\n' '/MODTCL_VERSION/d'
    printf '%s\n' '/CONFIGURE_ARGS/d'
  else
    printf '%s\n' '/^WANTLIB/d'
  fi >> ${portdir}spoto.sed
  do_out
  portdir=${portdir}pkg/
  OUTFILE=${portdir}DESCR
  ${ECHOSN} "$OUTFILE"
  mkdir -p $portdir
  if test -f ${srcdir}/README; then
    cat ${srcdir}/README > "$OUTFILE"
  else
    ${e} "$DESCR" > "$OUTFILE"
  fi
else
  do_out
fi

${ECHO} ''

if test X"$PKGS" != X"" && test X"$PKGS_CFGNOW" = X"yes"; then
  make pkgs-configure
fi

exit

# EOF
